---
/**
 *
 * Relume Component: Header 30
 *
 * @note If you want to use a subheading with multiple lines, pass an array of strings.
 *
 */

//  tools
import { motion } from "framer-motion";

// types
import type { Link } from "../../types/types";

// global components
import { Button } from "@relume_io/relume-ui";
import ParallaxBackgroundImage from "../global/ParallaxBackgroundImage.astro";
import ShapeDivider from "../global/ShapeDivider.astro";

// props
type Props = {
  imageMetaData: ImageMetadata;
  heading: string;
  subheading: string | string[];
  button: Link;
};

const { imageMetaData, heading, subheading, button } = Astro.props;
---

<section id="hero-section" class="relative px-[5%]">
  <div class="container relative z-20">
    <div
      class="flex max-h-[60rem] min-h-svh items-center justify-center py-16 text-center md:py-24 lg:py-28"
    >
      <div
        class="mt-12 flex w-full max-w-lg flex-col items-center justify-center gap-12 xl:max-w-xl"
      >
        <h1
          class="font-heading text-[4rem] leading-[0.8] text-white/90 transition xs:text-[5rem] sm:text-[6rem] min-[600px]:text-[8rem] md:text-[9rem] lg:text-[10rem] xl:text-[14rem]"
          style="text-shadow: 0 0 50px rgba(255, 255, 255, 0.5); -webkit-text-stroke: 1px rgba(255, 255, 255, 1);"
        >
          {heading}
        </h1>
        <p
          class="justify-self-center font-heading text-2xl font-extralight tracking-wider text-text-alternative md:text-4xl"
        >
          {
            Array.isArray(subheading)
              ? subheading.map((line) => (
                  <span class="">
                    {line}
                    <br />
                  </span>
                ))
              : subheading
          }
        </p>
        <div class="flex items-center justify-center gap-x-4">
          <Button
            title={button.title}
            className="animated-gradient rounded-full border-4 border-white font-heading text-4xl font-medium uppercase tracking-wide shadow-large"
          >
            <a href={button.href}>
              {button.title}
            </a>
          </Button>
        </div>
      </div>
    </div>
  </div>
  <!-- <AnimatedGradientOverlay /> -->
  <ParallaxBackgroundImage
    imageMetaData={imageMetaData}
    overlayClassName="bg-gray-900/70"
  />
  <ShapeDivider />
</section>
